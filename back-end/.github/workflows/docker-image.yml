# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io  # 默认为 docker.io，即去 Docker Hub 上找
  IMAGE_NAME: ${{ github.event.repository.name }}  # 使用 GitHub Actions 提供的能力，可以自动获取仓库名
  IMAGE_TAG: latest  # Docker Image 的 tag，为了方便我直接设置 latest
  PORT: 8080  # 服务要暴露的端口，可以改

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21  # 可以改版本
      uses: actions/setup-java@v3
      with:
        java-version: '21'  # 可以改版本
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    # 连接到远程服务器
    - name: Deploy
      uses: easingthemes/ssh-deploy@v5.1.0
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.SERVER_HOST }}
        REMOTE_USER: root
        ARGS: "-avzr --delete"
        SOURCE: "./silos-module-system/silos-system-start/target/"
        EXCLUDE: "./silos-module-system/silos-system-start/target/classes/,./silos-module-system/silos-system-start/target/generated-sources/,./silos-module-system/silos-system-start/target/generated-test-sources/,./silos-module-system/silos-system-start/target/test-classes/"
        TARGET: "/home/admin/silos"
        SCRIPT_AFTER: "cd /home/admin/silos;nohup java -jar silos-system-start-3.8.1.jar &"

        
